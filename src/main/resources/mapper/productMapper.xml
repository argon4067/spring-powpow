<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.springpowpow.mapper.ProductMapper">
<!--    제품 추가-->
    <insert id="insert" parameterType="ProductVO">
        INSERT INTO TBL_PRODUCT (
            ID, MEMBER_ID, PRODUCT_NAME, PRODUCT_PRICE,
            PRODUCT_REAL_PRICE, PRODUCT_CODE, PRODUCT_DETAIL,
            PRODUCT_ANIMAL, PRODUCT_CATEGORY, PRODUCT_COLOR,
            PRODUCT_SIZE, PRODUCT_STOCK, PRODUCT_EDIT_DATE, PRODUCT_DATE
        )
        VALUES (
            SEQ_PRODUCT.NEXTVAL, #{memberId}, #{productName}, #{productPrice},
            #{productRealPrice}, #{productCode}, #{productDetail}, #{productAnimal},
            #{productCategory}, #{productColor}, #{productSize}, #{productStock},
            <if test="productDate != null">#{productDate}</if>
            <if test="productDate == null">DEFAULT</if>,
            <if test="productEditDate != null">#{productEditDate}</if>
            <if test="productEditDate == null">DEFAULT</if>
        )
    </insert>

    <select id="selectRecentId" resultType="Long">
        SELECT SEQ_POST.NEXTVAL FROM DUAL
    </select>

<!--    제품 전체-->
    <select id="selectAll" resultType="ProductDTO">
        SELECT ID, MEMBER_ID, PRODUCT_PRICE, PRODUCT_REAL_PRICE, PRODUCT_DISCOUNT, PRODUCT_STOCK, PRODUCT_DATE,
               PRODUCT_NAME, PRODUCT_CODE, PRODUCT_DETAIL, PRODUCT_ANIMAL, PRODUCT_CATEGORY,
               PRODUCT_COLOR, PRODUCT_SIZE, PRODUCT_FILE_NAME, PRODUCT_FILE_PATH
        FROM VIEW_PRODUCT
        ORDER BY ID
    </select>

<!--    강아지 고양이 리스트 분리-->
    <select id="selectProductsByAnimal" resultType="ProductDTO">
        SELECT ID, MEMBER_ID, PRODUCT_PRICE, PRODUCT_REAL_PRICE, PRODUCT_DISCOUNT,
               PRODUCT_NAME, PRODUCT_CODE, PRODUCT_DETAIL, PRODUCT_ANIMAL, PRODUCT_CATEGORY, PRODUCT_COLOR, PRODUCT_SIZE
        FROM VIEW_PRODUCT
        WHERE PRODUCT_ANIMAL = #{animalType}
    </select>

<!--    판매자의 모든 제품-->
    <select id="selectAllBySeller" resultType="ProductDTO" parameterType="Long">
        SELECT ID, MEMBER_ID, PRODUCT_PRICE, PRODUCT_REAL_PRICE, PRODUCT_DISCOUNT, PRODUCT_STOCK, PRODUCT_DATE,
               PRODUCT_NAME, PRODUCT_CODE, PRODUCT_DETAIL, PRODUCT_ANIMAL, PRODUCT_CATEGORY,
               PRODUCT_COLOR, PRODUCT_SIZE, PRODUCT_FILE_NAME, PRODUCT_FILE_PATH
        FROM  VIEW_PRODUCT
        WHERE MEMBER_ID = #{memberId}
    </select>

<!--    제품 단일-->
    <select id="select" parameterType="Long" resultType="ProductDTO">
        SELECT TBP.ID, TBP.MEMBER_ID, TBP.PRODUCT_NAME, TBP.PRODUCT_CODE, TBP.PRODUCT_PRICE, TBP.PRODUCT_REAL_PRICE, TBP.PRODUCT_DISCOUNT, TBP.PRODUCT_DETAIL, TBF.PRODUCT_FILE_NAME, TBF.PRODUCT_FILE_PATH, TBP.PRODUCT_ANIMAL,
               TBP.PRODUCT_CATEGORY, TBP.PRODUCT_COLOR, TBP.PRODUCT_SIZE, TBD.DELIVERY_FEE_KIND, TBD.DELIVERY_FEE, TBD.DELIVERY_FEE_FREE, TBD.DELIVERY_HOW, TBD.DELIVERY_PAY_WHEN, TBD.DELIVERY_COMPANY
        FROM VIEW_PRODUCT TBP
        JOIN TBL_DELIVERY TBD
        ON TBP.ID = TBD.PRODUCT_ID
        JOIN TBL_PRODUCT_FILE TBF
        ON TBP.ID = TBF.PRODUCT_ID
        WHERE TBP.ID = #{id}
    </select>

<!--    제품 수정-->
    <update id="update" parameterType="ProductDTO">
        UPDATE TBL_PRODUCT
        SET PRODUCT_NAME = #{productName}, PRODUCT_PRICE = #{productPrice}, PRODUCT_REAL_PRICE = #{productRealPrice}, PRODUCT_CODE = #{productCode}, PRODUCT_STOCK = #{productStock},
            PRODUCT_EDIT_DATE = #{productEditDate}, PRODUCT_DETAIL = #{productDetail}, PRODUCT_ANIMAL = #{productAnimal}, PRODUCT_CATEGORY = #{productCategory}, PRODUCT_COLOR = #{productColor}, PRODUCT_SIZE = #{productSize}
    </update>

<!--    제품 삭제-->
    <delete id="delete" parameterType="Long">
        DELETE FROM TBL_PRODUCT
        WHERE ID = #{id}
    </delete>

    <delete id="deleteAll" parameterType="Long">
        DELETE FROM TBL_PRODUCT
        WHERE MEMBER_ID = #{memberId}
    </delete>

</mapper>