<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.springpowpow.mapper.MemberMapper">

    <select id="select" parameterType="Long" resultType="MemberVO">
        SELECT ID, MEMBER_EMAIL, MEMBER_NAME, MEMBER_PASSWORD,
               MEMBER_PHONE, MEMBER_NICKNAME, MEMBER_ZIPCODE, MEMBER_ADDRESS,
               MEMBER_ADDRESS_DETAIL, MEMBER_FILE_NAME, MEMBER_FILE_PATH, MEMBER_SMSCHECK, MEMBER_EMAILCHECK,
               MEMBER_DATE, MEMBER_BUSINESS_NUMBER, MEMBER_AUTH, MEMBER_PROVIDER, MEMBER_BUSINESS_NAME,
               MEMBER_BANK, MEMBER_BANK_ACCOUNT
        FROM TBL_MEMBER
        WHERE ID = #{id}
    </select>

    <select id="selectType" resultType="MemberVO">
        SELECT ID, MEMBER_EMAIL, MEMBER_NAME, MEMBER_PASSWORD,
               MEMBER_PHONE, MEMBER_NICKNAME, MEMBER_ZIPCODE, MEMBER_ADDRESS,
               MEMBER_ADDRESS_DETAIL, MEMBER_FILE_NAME, MEMBER_FILE_PATH, MEMBER_SMSCHECK, MEMBER_EMAILCHECK,
               MEMBER_DATE, MEMBER_BUSINESS_NUMBER, MEMBER_AUTH, MEMBER_PROVIDER, MEMBER_BUSINESS_NAME,
               MEMBER_BANK, MEMBER_BANK_ACCOUNT
        FROM TBL_MEMBER
        WHERE ID = #{id} AND MEMBER_PROVIDER = #{type}
    </select>

    <select id="selectAll" resultType="MemberVO">
        SELECT ID, MEMBER_EMAIL, MEMBER_NAME,
               MEMBER_PHONE, MEMBER_NICKNAME, MEMBER_ZIPCODE, MEMBER_ADDRESS,
               MEMBER_ADDRESS_DETAIL, MEMBER_FILE_NAME, MEMBER_FILE_PATH, MEMBER_SMSCHECK, MEMBER_EMAILCHECK,
               MEMBER_DATE, MEMBER_BUSINESS_NUMBER, MEMBER_AUTH, MEMBER_PROVIDER, MEMBER_BUSINESS_NAME,
               MEMBER_BANK, MEMBER_BANK_ACCOUNT
        FROM TBL_MEMBER
    </select>

    <select id="selectById" parameterType="String" resultType="Long">
        SELECT ID
        FROM TBL_MEMBER
        WHERE MEMBER_EMAIL = #{memberEmail}
    </select>

    <insert id="insert" parameterType="MemberVO">
        INSERT INTO TBL_MEMBER(ID, MEMBER_EMAIL, MEMBER_PASSWORD, MEMBER_NAME,
                                MEMBER_PHONE, MEMBER_NICKNAME, MEMBER_ZIPCODE, MEMBER_ADDRESS,
                                MEMBER_ADDRESS_DETAIL, MEMBER_FILE_NAME, MEMBER_FILE_PATH, MEMBER_SMSCHECK, MEMBER_EMAILCHECK,
                                MEMBER_DATE, MEMBER_BUSINESS_NUMBER, MEMBER_AUTH, MEMBER_PROVIDER,
                                MEMBER_BUSINESS_NAME, MEMBER_BANK, MEMBER_BANK_ACCOUNT)
        VALUES(
        SEQ_MEMBER.NEXTVAL,
        #{memberEmail},
        <if test="memberPassword != null">#{memberPassword}</if>
        <if test="memberPassword == null">NULL</if>,
        #{memberName},
        #{memberPhone},
        <if test="memberNickname != null">#{memberNickname}</if>
        <if test="memberNickname == null">DEFAULT</if>,
        <if test="memberZipcode != null">#{memberZipcode}</if>
        <if test="memberZipcode == null">NULL</if>,
        <if test="memberAddress != null">#{memberAddress}</if>
        <if test="memberAddress == null">NULL</if>,
        <if test="memberAddressDetail != null">#{memberAddressDetail}</if>
        <if test="memberAddressDetail == null">NULL</if>,
        <if test="memberFileName != null">#{memberFileName}</if>
        <if test="memberFileName == null">DEFAULT</if>,
        <if test="memberFilePath != null">#{memberFilePath}</if>
        <if test="memberFilePath == null">DEFAULT</if>,
        <if test="memberSmsCheck != null">#{memberSmsCheck}</if>
        <if test="memberSmsCheck == null">DEFAULT</if>,
        <if test="memberEmailCheck != null">#{memberEmailCheck}</if>
        <if test="memberEmailCheck == null">DEFAULT</if>,
        <if test="memberDate != null">#{memberDate}</if>
        <if test="memberDate == null">DEFAULT</if>,
        <if test="memberBusinessNumber != null">#{memberBusinessNumber}</if>
        <if test="memberBusinessNumber == null">NULL</if>,
        <if test="memberAuth != null">#{memberAuth}</if>
        <if test="memberAuth == null">DEFAULT</if>,
        <if test="memberProvider != null">#{memberProvider}</if>
        <if test="memberProvider == null">DEFAULT</if>,
        <if test="memberBusinessName != null">#{memberBusinessName}</if>
        <if test="memberBusinessName == null">NULL</if>,
        <if test="memberBank != null">#{memberBank}</if>
        <if test="memberBank == null">NULL</if>,
        <if test="memberBankAccount != null">#{memberBankAccount}</if>
        <if test="memberBankAccount == null">NULL</if>
        )
    </insert>

<update id="update" parameterType="MemberVO">
    UPDATE TBL_MEMBER
    <set>
        <if test="memberEmail != null">
            MEMBER_EMAIL = #{memberEmail},
        </if>
        <if test="memberPassword != null">
            MEMBER_PASSWORD = #{memberPassword},
        </if>
        <if test="memberName != null">
            MEMBER_NAME = #{memberName},
        </if>
        <if test="memberPhone != null">
            MEMBER_PHONE = #{memberPhone},
        </if>
        <if test="memberNickname != null">
            MEMBER_NICKNAME = #{memberNickname},
        </if>
        <if test="memberZipcode != null">
            MEMBER_ZIPCODE = #{memberZipcode},
        </if>
        <if test="memberAddress != null">
            MEMBER_ADDRESS = #{memberAddress},
        </if>
        <if test="memberAddressDetail != null">
            MEMBER_ADDRESS_DETAIL = #{memberAddressDetail},
        </if>
        <if test="memberFileName != null">
            MEMBER_FILE_NAME = #{memberFileName},
        </if>
        <if test="memberFilePath != null">
            MEMBER_FILE_PATH = #{memberFilePath},
        </if>
        <if test="memberSmsCheck != null">
            MEMBER_SMSCHECK = #{memberSmsCheck},
        </if>
        <if test="memberEmailCheck != null">
            MEMBER_EMAILCHECK = #{memberEmailCheck},
        </if>
        <if test="memberBusinessNumber != null">
            MEMBER_BUSINESS_NUMBER = #{memberBusinessNumber},
        </if>
        <if test="memberBusinessName != null">
            MEMBER_BUSINESS_NAME = #{memberBusinessName},
        </if>
        <if test="memberBank != null">
            MEMBER_BANK = #{memberBank},
        </if>
        <if test="memberBankAccount != null">
            MEMBER_BANK_ACCOUNT = #{memberBankAccount},
        </if>
    </set>
    WHERE ID = #{id}
</update>

    <delete id="delete" parameterType="Long">
        DELETE FROM TBL_MEMBER
        WHERE ID = #{id}
    </delete>

<!-- 이메일 중복체크 -->
    <select id="checkEmailExists" resultType="int">
        SELECT COUNT(*)
        FROM TBL_MEMBER
        WHERE MEMBER_EMAIL = #{memberEmail}
    </select>

    <!-- 전화번호로 이메일 찾기 -->
    <select id="selectEmailByPhone" parameterType="String" resultType="String">
        SELECT MEMBER_EMAIL
        FROM TBL_MEMBER
        WHERE MEMBER_PHONE = #{memberPhone}
    </select>

    <!-- 이메일로 회원 정보 조회 -->
    <select id="findMemberByEmail" parameterType="String" resultType="MemberVO">
        SELECT ID, MEMBER_EMAIL, MEMBER_NAME, MEMBER_PHONE,
               MEMBER_NICKNAME, MEMBER_ZIPCODE, MEMBER_ADDRESS, MEMBER_ADDRESS_DETAIL,
               MEMBER_FILE_NAME, MEMBER_FILE_PATH, MEMBER_SMSCHECK, MEMBER_EMAILCHECK, MEMBER_DATE,
               MEMBER_BUSINESS_NUMBER, MEMBER_AUTH, MEMBER_PROVIDER, MEMBER_BUSINESS_NAME,
               MEMBER_BANK, MEMBER_BANK_ACCOUNT
        FROM TBL_MEMBER
        WHERE MEMBER_EMAIL = #{memberEmail}
    </select>

<!--    어드민에서 구매자 구분-->
    <select id="selectBuyerList" resultType="MemberVO">
        SELECT ID, MEMBER_EMAIL, MEMBER_NAME,
               MEMBER_PHONE, MEMBER_NICKNAME, MEMBER_ZIPCODE, MEMBER_ADDRESS,
               MEMBER_ADDRESS_DETAIL, MEMBER_FILE_NAME, MEMBER_FILE_PATH, MEMBER_SMSCHECK, MEMBER_EMAILCHECK,
               MEMBER_DATE, MEMBER_BUSINESS_NUMBER, MEMBER_AUTH, MEMBER_PROVIDER,
               MEMBER_BUSINESS_NAME, MEMBER_BANK, MEMBER_BANK_ACCOUNT
        FROM TBL_MEMBER
        WHERE MEMBER_PROVIDER = '구매자'
    </select>

<!--    어드민에서 판매자 구분-->
    <select id="selectSellerList" resultType="MemberVO">
        SELECT ID, MEMBER_EMAIL, MEMBER_NAME,
               MEMBER_PHONE, MEMBER_NICKNAME, MEMBER_ZIPCODE, MEMBER_ADDRESS,
               MEMBER_ADDRESS_DETAIL, MEMBER_FILE_NAME, MEMBER_FILE_PATH, MEMBER_SMSCHECK, MEMBER_EMAILCHECK,
               MEMBER_DATE, MEMBER_BUSINESS_NUMBER, MEMBER_AUTH, MEMBER_PROVIDER,
               MEMBER_BUSINESS_NAME, MEMBER_BANK, MEMBER_BANK_ACCOUNT
        FROM TBL_MEMBER
        WHERE MEMBER_PROVIDER != '구매자'
    </select>

    <!-- 비밀번호 변경 -->
    <update id="updatePassword" parameterType="MemberVO">
        UPDATE TBL_MEMBER
        SET MEMBER_PASSWORD = #{memberPassword}
        WHERE MEMBER_EMAIL = #{memberEmail}
    </update>

    <!--redux 의 email 로 비밀번호 확인-->
    <select id="selectPasswordByMemberEmail" parameterType="MemberVO" resultType="_int">
        SELECT CASE
                   WHEN MEMBER_PASSWORD = #{memberPassword} THEN 1
                   ELSE 0
                   END
        FROM TBL_MEMBER
        WHERE MEMBER_EMAIL = #{memberEmail}
    </select>


</mapper>